
 다이렉트는 심드 연산을 쓴다.
 현재 우리는 뭐 곱하기 뭐 곱하기 뭐 이런 식인데,
 함수와 기계어 동작 방식에 대해 알고있다면 이해할 수 있을 것임 (CPU에 막 보내고 받고)
 
 심드연산을 쓰는 다이렉트는 한 번에 다 보내고 한 번에 결과를 다 받는 것이다
 기본적인 연산 반식보다 훨씬 빠름(4배 빠르대)
 
 다이렉트 함수를 쓰기 위해서는 d3d11_4 d3dcompiler DirectXPackedVector 헤더 참조
 윈도우는 다이렉트로 만들어지지 않은 것이 없기 때문에 헤더를 안써도 함수를 사용할 수 있긴 함.
 윈도우 환경 내에서 모~든 3D의 연산을 하기 위한 라이브러리입니다.
 
 d3d11 d3dcompiler dxguid를 pragma comment로 추가 (lib)
 
 다중연산처리를 위한 ~ 심드~
 다이렉트가 지원하는 심드(SIMD) 연산용 벡터는 DirectX::XMVECTOR
 DirectX::FLOAT4
 DirectX::FOLAT3
 
 심드연산은 한 번에 무조건 128바이트씩 연산하기 때문에, 리턴값도 고정되어 있음
 
 뷰포트는 다이렉트 함수가 업읍니다.