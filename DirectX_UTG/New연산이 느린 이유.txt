 
 - new를 하면 연산이 느린 이유

 1) new하면 힙 영역에 데이터 공간이 할당된다. Winapi에서 Create류 함수는 모두 new를 실시했다.
    이 경우 다양한 크기의 데이터들이 힙 영역에 대부분 배열과 같이 생성되는데, 게임을 진행하다보면 액터에게 Death를 실시한다.
    이 경우 해당 데이터 크기만큼 배열과 같은 형태에서 빠져나오게 되어 마치 이가 빠진 형태가 된다. (메모리 단편화 발생)
    이때 새로 new를 할 경우 빈 공간에 데이터가 할당될 수 있는지 확인해보거나, 간간히 다시 배열과 같은 형태로 만들기 위해 붙이는 행위를 실시한다. (메모리 단편화를 해결하기 위한 연산 추가 작용)
    여러 연산이 추가로 작용하기 때문에 느려진다는 뜻
    이빨빠진 공간이 많을 수록 new와 delete가 쉽지 않아진다는 뜻

 2) 컴퓨터공학 적인 측면에서 봤을 때, CPU는 일이 굉장히 많기 때문에 캐쉬의 도움을 받는다.
    캐쉬는 CPU에게 데이터를 전달할 때, ~번지에 해당하는 데이터를 전달해준다 (값을 주는 것이 아님)
    이때 ~번지의 데이터를 가져오려고 하는 경우, 캐쉬의 크기만큼 양 옆으로 크게 복사해서 지니고 있게 된다.
    이것을 캐쉬 적중률이라고 하는데,
    캐쉬 적중률은 상속을 하거나, 벡터와 같이 메모리가 일렬로 존재하는 데이터의 경우 올라가게 된다.
    map이나 list, 아니면 다른 클래스에서 함수를 호출하는 행위 등은 메모리가 떨어져 있을 확률이 크기 때문에 캐쉬의 복사 과정에서 제외됨
    이럴 경우에는 캐쉬가 자신이 들고 있는 데이터를 비운 후 해당 영역에서 데이터를 복사하는 행위를 실시한다 << 이게 오래걸리는 이유
